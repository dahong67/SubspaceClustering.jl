var documenterSearchIndex = {"docs":
[{"location":"#SubspaceClustering","page":"Home","title":"SubspaceClustering","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SubspaceClustering.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#SubspaceClustering.KSSResult","page":"Home","title":"SubspaceClustering.KSSResult","text":"KSSResult{\n    TU<:AbstractVector{<:AbstractMatrix{<:AbstractFloat}},\n    Tc<:AbstractVector{<:Integer},\n    T<:Real}\n\nThe output of kss.\n\nFields\n\nU::TU: vector of subspace basis matrices U[1],...,U[K]\nc::Tc: vector of cluster assignments c[1],...,c[N]\niterations::Int: number of iterations performed\ntotalcost::T: final value of total cost function\ncounts::Vector{Int}: vector of cluster sizes counts[1],...,counts[K]\nconverged::Bool: final convergence status\n\n\n\n\n\n","category":"type"},{"location":"#SubspaceClustering.kss-Tuple{AbstractMatrix{<:Real}, AbstractVector{<:Integer}}","page":"Home","title":"SubspaceClustering.kss","text":"kss(X::AbstractMatrix{<:Real}, d::AbstractVector{<:Integer};\n    maxiters = 100,\n    rng = default_rng(),\n    Uinit = [randsubspace(rng, size(X, 1), di) for di in d])\n\nCluster the N data points in the D×N data matrix X into K clusters via the K-subspaces (KSS) algorithm with corresponding subspace dimensions d[1],...,d[K]. Output is a KSSResult containing the resulting cluster assignments c[1],...,c[N], subspace basis matrices U[1],...,U[K], and metadata about the algorithm run.\n\nKSS seeks to cluster data points by their subspace by minimizing the following total cost\n\nsum_i=1^N  X i - Uci Uci X i _2^2\n\nwith respect to the cluster assignments c[1],...,c[N] and subspace basis matrices U[1],...,U[K].\n\nKeyword arguments\n\nmaxiters::Integer = 100: maximum number of iterations\nrng::AbstractRNG = default_rng(): random number generator   (used when reinitializing the subspace for an empty cluster)\nUinit::AbstractVector{<:AbstractMatrix{<:AbstractFloat}}   = [randsubspace(rng, size(X, 1), di) for di in d]:   vector of K initial subspace basis matrices to use   (each Uinit[k] should be D×d[k])\n\nSee also KSSResult.\n\n\n\n\n\n","category":"method"},{"location":"#SubspaceClustering.kss_assign_clusters!-Tuple{Any, Any, Any}","page":"Home","title":"SubspaceClustering.kss_assign_clusters!","text":"kss_assign_clusters!(c, U, X)\n\nAssign the N data points in X to the K subspaces in U, update the vector of assignments c, and return this vector of assignments.\n\nSee also kss_assign_clusters, kss.\n\n\n\n\n\n","category":"method"},{"location":"#SubspaceClustering.kss_assign_clusters-Tuple{Any, Any}","page":"Home","title":"SubspaceClustering.kss_assign_clusters","text":"kss_assign_clusters(U, X)\n\nAssign the N data points in X to the K subspaces in U and return a vector of the assignments.\n\nSee also kss_assign_clusters!, kss.\n\n\n\n\n\n","category":"method"},{"location":"#SubspaceClustering.kss_estimate_subspace-Tuple{Any, Any}","page":"Home","title":"SubspaceClustering.kss_estimate_subspace","text":"kss_estimate_subspace(Xk, dk)\n\nReturn dk-dimensional subspace that best fits the data points in Xk.\n\nSee also kss.\n\n\n\n\n\n","category":"method"},{"location":"#SubspaceClustering.randsubspace!-Tuple{Random.AbstractRNG, AbstractMatrix}","page":"Home","title":"SubspaceClustering.randsubspace!","text":"randsubspace!([rng=default_rng()], U::AbstractMatrix)\n\nSet the D×d matrix U to be the basis matrix of a randomly generated d-dimensional subspace of ℝᴰ.\n\nSee also randsubspace\n\n\n\n\n\n","category":"method"},{"location":"#SubspaceClustering.randsubspace-Union{Tuple{T}, Tuple{Random.AbstractRNG, Type{T}, Integer, Integer}} where T<:AbstractFloat","page":"Home","title":"SubspaceClustering.randsubspace","text":"randsubspace([rng=default_rng()], [T=Float64], D, d)\n\nGenerate a random d-dimensional subspace of ℝᴰ and return a basis matrix with element type T<:AbstractFloat.\n\nSee also randsubspace!\n\n\n\n\n\n","category":"method"}]
}
